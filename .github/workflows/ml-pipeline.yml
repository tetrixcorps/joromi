name: ML Services Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: registry.digitalocean.com
  TEST_TAG: test
  PROD_TAG: latest

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Run Tests
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pytest tests/

  build:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [api-gateway, ml-service, websocket-service]
    steps:
      - uses: actions/checkout@v2
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./services/${{ matrix.service }}
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ github.repository }}/${{ matrix.service }}:${{ env.TEST_TAG }}
            ${{ env.REGISTRY }}/${{ github.repository }}/${{ matrix.service }}:${{ github.sha }}

  staging:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: https://staging.joromi.ai
    steps:
      - uses: actions/checkout@v2
      - name: Deploy to Staging
        run: |
          echo "Deploying to staging environment"

  integration-tests:
    needs: staging
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run E2E Tests
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-asyncio httpx
          pytest tests/e2e/

  production:
    needs: integration-tests
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://joromi.ai
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2
      - name: Deploy to Production
        run: |
          echo "Deploying to production environment" 