name: ML Services Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: registry.digitalocean.com
  TEST_TAG: test
  PROD_TAG: latest

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Run Linting
        run: |
          pip install flake8 black isort
          flake8 .
          black --check .
          isort --check-only .

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Run Unit Tests
        run: |
          pip install -r requirements.txt
          pytest tests/unit/ --cov=services --cov-report=xml

  build:
    needs: [lint, unit-tests]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [api-gateway, ml-service, websocket-service]
    steps:
      - uses: actions/checkout@v2
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./services/${{ matrix.service }}
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ github.repository }}/${{ matrix.service }}:${{ env.TEST_TAG }}
            ${{ env.REGISTRY }}/${{ github.repository }}/${{ matrix.service }}:${{ github.sha }}

  staging-deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: https://staging.joromi.ai
    steps:
      - uses: actions/checkout@v2
      - name: Deploy to Staging
        run: |
          echo "Deploying to staging environment"

  integration-tests:
    needs: staging-deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run Integration Tests
        run: |
          pip install -r requirements.txt
          pytest tests/integration/ --junitxml=test-results/integration.xml

  e2e-tests:
    needs: integration-tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run E2E Tests
        run: |
          pip install -r requirements.txt
          pytest tests/e2e/ --junitxml=test-results/e2e.xml

  prod-deploy:
    needs: e2e-tests
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://api.joromi.ai
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2
      - name: Deploy to Production
        run: |
          echo "Deploying to production environment"

  performance-tests:
    needs: prod-deploy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2
      - name: Run Performance Tests
        run: |
          pip install locust
          locust -f tests/performance/locustfile.py --headless -u 100 -r 10 --run-time 5m 